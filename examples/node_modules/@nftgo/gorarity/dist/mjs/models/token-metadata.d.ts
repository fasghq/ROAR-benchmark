export type TraitType = string;
export type TraitValue = string;
export declare class StringTrait {
    private _name;
    private _value;
    constructor(name: TraitType, value: TraitValue);
    get name(): TraitType;
    set name(name: TraitType);
    get value(): string;
}
export declare class TokenMetadata {
    private _stringTraits;
    constructor(stringTraits?: Map<TraitType, StringTrait>);
    get stringTraits(): Map<string, StringTrait>;
    private static normalizeTraits;
    static fromTokenTraits(tokenTraits: {
        traitType: TraitType;
        traitValue: TraitValue;
    }[]): TokenMetadata;
    toTraits(): Map<TraitType, TraitValue>;
    traitExists(traitName: TraitType): boolean;
    addTrait(trait: StringTrait): void;
}
